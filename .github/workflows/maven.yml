name: Java CI with Maven

on:
  push:
    branches: [ updatedCustomerAccount ]
  pull_request:
    branches: [ updatedCustomerAccount ]


jobs:
  build:
    runs-on: ubuntu-latest # is Ubuntu environment
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    # ... some other config ...

    steps:
      # ... some prepare steps, like action/checkout, run some script without MySQL, etc.

      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 1.7
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'



      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "SHOW DATABASES"

      - name: Create RoadsideAssistance Database
        run: |
          mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "CREATE DATABASE roadSideAssistance"  

      #- name: Shutdown Ubuntu MySQL (SUDO)
      #  run: sudo  # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

      # ... Set-up MySQL configuration, see Usage
      #- name: Set up MySQL
      #- uses: mirromutth/mysql-action@v1.1
      #  with:
      #    mysql database: 'roadSideAssistance' # Optional, default value is "test". The specified database which will be create
      #    mysql root password: root # Required if "mysql user" is empty, default is empty. The root superuser password
      #    mysql user: 'user' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
      #    mysql password: password # Required if "mysql user" exists. The password for the "mysql user"
      #   # ... some steps after set-up MySQL ...

      - name: Clean install Maven
        run: mvn clean install

      - name: Build with Maven
        run: mvn -B package --file pom.xml


      #- name: Build
      #  run: mvn --batch-mode -DskipTests package

      - name: Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
    # ... some another config ...